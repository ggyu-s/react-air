{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  searchList: [],\n  searchLoading: false,\n  searchDone: false,\n  searchError: null\n};\nexport var AIRPORT_SEARCH_REQUEST = \"AIRPORT_SEARCH_REQUEST\";\nexport var AIRPORT_SEARCH_SUCCESS = \"AIRPORT_SEARCH_SUCCESS\";\nexport var AIRPORT_SEARCH_FAILURE = \"AIRPORT_SEARCH_FAILURE\";\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case AIRPORT_SEARCH_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchLoading: true,\n        searchDone: false,\n        searchError: null\n      });\n\n    case AIRPORT_SEARCH_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchLoading: false,\n        searchDone: true,\n        searchList: [].concat(_toConsumableArray(state), [action.data])\n      });\n\n    case AIRPORT_SEARCH_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchLoading: true,\n        searchDone: false,\n        searchError: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Volumes/ggyu/coding/react-air/front/reducers/search.js"],"names":["initialState","searchList","searchLoading","searchDone","searchError","AIRPORT_SEARCH_REQUEST","AIRPORT_SEARCH_SUCCESS","AIRPORT_SEARCH_FAILURE","reducer","state","action","type","data"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,EADc;AAE1BC,EAAAA,aAAa,EAAE,KAFW;AAG1BC,EAAAA,UAAU,EAAE,KAHc;AAI1BC,EAAAA,WAAW,EAAE;AAJa,CAArB;AAOP,OAAO,IAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,IAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,IAAMC,sBAAsB,GAAG,wBAA/B;;AAEP,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBT,YAAyB;AAAA,MAAXU,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,sBAAL;AACE,6CACKI,KADL;AAEEP,QAAAA,aAAa,EAAE,IAFjB;AAGEC,QAAAA,UAAU,EAAE,KAHd;AAIEC,QAAAA,WAAW,EAAE;AAJf;;AAMF,SAAKE,sBAAL;AACE,6CACKG,KADL;AAEEP,QAAAA,aAAa,EAAE,KAFjB;AAGEC,QAAAA,UAAU,EAAE,IAHd;AAIEF,QAAAA,UAAU,+BAAMQ,KAAN,IAAaC,MAAM,CAACE,IAApB;AAJZ;;AAMF,SAAKL,sBAAL;AACE,6CACKE,KADL;AAEEP,QAAAA,aAAa,EAAE,IAFjB;AAGEC,QAAAA,UAAU,EAAE,KAHd;AAIEC,QAAAA,WAAW,EAAE;AAJf;;AAMF;AACE,aAAOK,KAAP;AAvBJ;AAyBD,CA1BD;;AA4BA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  searchList: [],\n  searchLoading: false,\n  searchDone: false,\n  searchError: null,\n};\n\nexport const AIRPORT_SEARCH_REQUEST = \"AIRPORT_SEARCH_REQUEST\";\nexport const AIRPORT_SEARCH_SUCCESS = \"AIRPORT_SEARCH_SUCCESS\";\nexport const AIRPORT_SEARCH_FAILURE = \"AIRPORT_SEARCH_FAILURE\";\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case AIRPORT_SEARCH_REQUEST:\n      return {\n        ...state,\n        searchLoading: true,\n        searchDone: false,\n        searchError: null,\n      };\n    case AIRPORT_SEARCH_SUCCESS:\n      return {\n        ...state,\n        searchLoading: false,\n        searchDone: true,\n        searchList: [...state, action.data],\n      };\n    case AIRPORT_SEARCH_FAILURE:\n      return {\n        ...state,\n        searchLoading: true,\n        searchDone: false,\n        searchError: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}